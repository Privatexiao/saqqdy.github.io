(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{377:function(e,r,s){"use strict";s.r(r);var t=s(378),n=s.n(t);for(var i in t)["default"].indexOf(i)<0&&function(e){s.d(r,e,(function(){return t[e]}))}(i);r.default=n.a},378:function(e,r){},432:function(e,r,s){"use strict";s.d(r,"a",(function(){return t})),s.d(r,"b",(function(){return n}));var t=function(){var e=this,r=e.$createElement,s=e._self._c||r;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("在做一些网站时，经常会有允许用户输入html样式代码，却禁止脚本的运行的需求, 以达到丰富网页样式，禁止恶意代码的运行。\n当然不能用 htmlencode 和 htmldecode 方法,因为这样连基本的html代码会被禁止掉。\n我在网上搜索，也没有找到好的解决办法，倒是收集了一些脚本攻击的实例：")]),e._v(" "),s("ol",[s("li"),e._v(" "),s("li",[e._v("<a href=javascript:...中的代码")]),e._v(" "),s("li",[e._v("其它基本控件的 on...事件中的代码")]),e._v(" "),s("li",[e._v('iframe 和 frameset 中载入其它页面造成的攻击\n有了这些资料后，事情就简单多了，写一个简单的方法，用正则表达式把以上符合几点的代码替换掉:\npublic string wipescript(string html)\n{\nsystem.text.regulare-xpressions.regex regex1 = new system.text.regulare-xpressions.regex(@"<script[\\s\\s]+<\/script *>",system.text.regulare-xpressions.regexoptions.ignorecase);\nsystem.text.regulare-xpressions.regex regex2 = new system.text.regulare-xpressions.regex(@" href *= *[\\s\\s]*script '),s("em",[e._v(':",system.text.regulare-xpressions.regexoptions.ignorecase);\nsystem.text.regulare-xpressions.regex regex3 = new system.text.regulare-xpressions.regex(@" on[\\s\\s]')]),e._v('=",system.text.regulare-xpressions.regexoptions.ignorecase);\nsystem.text.regulare-xpressions.regex regex4 = new system.text.regulare-xpressions.regex(@"<iframe[\\s\\s]+</iframe *>",system.text.regulare-xpressions.regexoptions.ignorecase);\nsystem.text.regulare-xpressions.regex regex5 = new system.text.regulare-xpressions.regex(@"<frameset[\\s\\s]+</frameset *>",system.text.regulare-xpressions.regexoptions.ignorecase);\nhtml = regex1.replace(html, ""); //过滤'),s("script"),e._v('标记\nhtml = regex2.replace(html, ""); //过滤href=javascript: ('),s("a",[e._v(') 属性\nhtml = regex3.replace(html, " _disibledevent="); //过滤其它控件的on...事件\nhtml = regex4.replace(html, ""); //过滤iframe\nhtml = regex5.replace(html, ""); //过滤frameset\nreturn html;\n}\n此方法输入可能包含脚本的html代码，返回则就是干净的代码了。')])])])])},n=[]},433:function(e,r,s){"use strict";s.r(r);var t=s(432),n=s(377);for(var i in n)["default"].indexOf(i)<0&&function(e){s.d(r,e,(function(){return n[e]}))}(i);var a=s(29),l=Object(a.a)(n.default,t.a,t.b,!1,null,null,null);r.default=l.exports}}]);