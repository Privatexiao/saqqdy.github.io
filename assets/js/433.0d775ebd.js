(window.webpackJsonp=window.webpackJsonp||[]).push([[433],{862:function(e,v,_){"use strict";_.r(v);var n=_(29),t=Object(n.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("p",[_("code",[e._v("==")]),e._v("：等同，比较运算符，两边值类型不同的时候，先进行类型转换再比较；\n")]),e._v(" "),_("pre",{staticClass:"wp-block-code"},[_("code",[e._v('2 == "2" // true\n0 == false // true\n1 == true // true\nnull == undefined // true')])]),e._v(" "),_("p",[_("code",[e._v("===")]),e._v("：恒等，严格比较运算符，不做类型转换，类型不同就是不等；\n")]),e._v(" "),_("pre",{staticClass:"wp-block-code"},[_("code",[e._v('2 === "2" // false\n0 === false // false\n1 === true // false\nnull === undefined // false\nNan === undefined // false')])]),e._v(" "),_("p",[_("code",[e._v("Object.is()")]),e._v("是* ES6 *新增的用来比较两个值是否严格相等的方法，与"),_("code",[e._v("===")]),e._v("的行为基本一致。\n")]),e._v(" "),_("pre",{staticClass:"wp-block-code"},[_("code",[e._v("Object.is(1, '2') // false\nObject.is(0, false) // false\nObject.is(1, true) // false\nObject.is(null, undefined) // false")])]),e._v(" "),_("p",[e._v("先说"),_("code",[e._v("===")]),e._v("，这个比较简单，只需要利用下面的规则来判断两个值是否恒等就行了：如果类型不同，就* 不相等 "),_("em",[e._v("，如果两个都是")]),e._v("* 数值 *"),_("em",[e._v("，并且是同一个值，那么")]),e._v(" 相等 *；\n")]),e._v(" "),_("p",[e._v("值得注意的是，如果两个值中至少一个是** NaN *"),_("em",[e._v("，那么")]),e._v(" 不相等 "),_("em",[e._v("（判断一个值是否是")]),e._v(" NaN *，可以用"),_("code",[e._v("isNaN()")]),e._v("或"),_("code",[e._v("Object.is()")]),e._v("来判断）。\n")]),e._v(" "),_("p",[e._v("如果两个都是** 字符串 *"),_("em",[e._v("，每个位置的字符都一样，那么")]),e._v(" 相等 "),_("em",[e._v("；否则")]),e._v(" 不相等 *。\n")]),e._v(" "),_("p",[e._v("如果两个值都是同样的** Boolean *"),_("em",[e._v("值，那么")]),e._v(" 相等 *。\n")]),e._v(" "),_("p",[e._v("如果两个值都引用同一个** 对象或函数 "),_("em",[_("em",[e._v("，那么")]),e._v(" 相等 "),_("em",[e._v("，即两个对象的")])]),e._v(" 物理地址 *"),_("em",[e._v("也必须保持一致；否则")]),e._v(" 不相等 *。\n")]),e._v(" "),_("p",[e._v("如果两个值都是** null "),_("strong",[e._v("，或者都是")]),e._v(" undefined *"),_("em",[e._v("，那么")]),e._v(" 相等 *。\n")]),e._v(" "),_("p",[e._v("再说"),_("code",[e._v("Object.is()")]),e._v("，其行为与"),_("code",[e._v("===")]),e._v("基本一致，不过有两处不同：\n")]),e._v(" "),_("blockquote",{staticClass:"wp-block-quote"},[e._v("** +0 **不等于** -0 **** NaN **等于自身。")]),e._v(" "),_("pre",{staticClass:"wp-block-code"},[_("code",[e._v("+0 === -0 // true\nObject.is(+0, -0) // false\n+0 === 0 // true\nObject.is(+0, 0) // true\nNaN === NaN // false\nObject.is(NaN, NaN) // true")])])])}),[],!1,null,null,null);v.default=t.exports}}]);