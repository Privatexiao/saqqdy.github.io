(window.webpackJsonp=window.webpackJsonp||[]).push([[679],{1108:function(s,c,e){"use strict";e.r(c);var t=e(29),a=Object(t.a)({},(function(){var s=this,c=s.$createElement,e=s._self._c||c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("了解.htaccess文件之后下面就告诉大家如何做好使用.htaccess文件的准备工作吧！首要工作是要确定你的服务器要支持.htaccess文件，这个倒是不需要担心，因为大部分服务器都是支持的。许多主机支持.htaccess，但实际上并不会特别声明，许多其他类型的主机有能力 但并不允许他们的用户使用. htaccess。一般来说，如果你的主机使用Unix或Linux系统，或任何版本的Apache网络服务器，从理论上都是支持.htaccess的，尽管你的主机服务商可能不允许你使用它。")]),s._v(" "),e("p",[s._v("判断你的主机是否允许.htaccess，一个标志很好的是它是否支持文件夹密码保护。为达到此功能，主机服务商需要 使用.htaccess（当然，少数情况下他们虽提供密码保护功能，但却并不允许你使用.htaccess）。如果你不确定自己的主机是否支持. htaccess，最好的办法是上传你自己的.htaccess文件看看是否有用，或者直接发送e-mail向你的主机服务商咨询。")]),s._v(" "),e("p",[s._v('Apache系统中的.htaccess文件(或者"分布式配置文件"提供了针对目录改变配置的方法，即，在一个特定 的文档目录中放置一个包含一个或多个指令的文件，以作用于此目录及其所有子目录。作为用户，所能使用的命令受到限制。管理员可以通过Apache的 AllowOverride指令来设置。')]),s._v(" "),e("p",[s._v("子目录中的指令会覆盖更高级目录或者主服务器配置文件中的指令。")]),s._v(" "),e("p",[s._v(".htaccess必须以ASCII模式上传，最好将其权限设置为644。")]),s._v(" "),e("p",[s._v(".htaccess可以做大量的事情，包括：文件夹密码保护、用户自动重定向、自定义错误页面、改变你的文件扩展名、封禁特定IP地址的用户、只允许特定IP地址的用户、禁止目录列表，以及使用其他文件作为index文件。")])])}),[],!1,null,null,null);c.default=a.exports}}]);